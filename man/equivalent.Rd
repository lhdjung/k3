% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/equivalence.R
\name{equivalent}
\alias{equivalent}
\alias{equivalent_scalar}
\alias{\%eq\%}
\alias{\%eq1\%}
\title{Test for equivalence}
\usage{
equivalent(x, y, strict = FALSE)

equivalent_scalar(x, y, strict = FALSE)

x \%eq\% y

x \%eq1\% y
}
\arguments{
\item{x, y}{Two vectors. They should have the same length unless either has
length 1. For \code{equivalent_scalar()}, both must have length 1.}

\item{strict}{Logical. If set to \code{TRUE}, values are checked for exact
equivalence using \code{\link[=identical]{identical()}}. Default is \code{FALSE}.}
}
\value{
Logical. Never \code{NA} unless \code{x} or \code{y} have length 0. For
\code{equivalent()} and \verb{\%eq\%}, the length depends on \code{x} and \code{y}, as in \code{\link{&}},
\code{\link{==}}, etc. For \code{equivalent_scalar()} and \verb{\%eq1\%}, the length is always 1.
}
\description{
For each pair of values, \code{equivalent()} checks whether they
evaluate equally. \code{equivalent_scalar()} is faster but only works with
length-1 vectors.

By default:
\itemize{
\item Any two missing values count as equivalent.
\item One known and one missing value do not count as equivalent.
\item Two known values are checked for equivalence using \code{\link{==}}.
}

The operators \verb{\%eq\%} and \verb{\%eq1\%} always use these defaults. \verb{\%eq\%} is like
\code{equivalent()}, and \verb{\%eq1\%} is like \code{equivalent_scalar()}.
}
\details{
These functions are useful if the focus is on the data themselves --
not what the data might represent in the real world, or minor differences
between their storage modes (e.g., numeric versus integer, \code{NA} versus
\code{NA_character_}). If types or attributes do matter, there is still the
\code{strict = TRUE} option.
\subsection{Comparison to base R}{
\itemize{
\item Unlike \code{\link{==}}, these functions treat \code{NA}s as genuine values, not as
placeholders for unknown values: they consider \code{NA} and \code{NA} to be equal.
\item Unlike \code{\link[=identical]{identical()}}, they ignore attributes and type differences
between \code{NA}s by default: they consider, e.g., \code{NA_real_} and \code{NA_integer_}
to be equal. Also, \code{equivalent()} is vectorized, and \code{equivalent_scalar()}
makes sure that both inputs have length 1. Both functions warn or error if
the inputs have incompatible lengths, i.e., two lengths that are different
from 1 and from each other.
\item Unlike \code{\link[=all.equal]{all.equal()}}, they are clear, simple, and consistent.
}
}
}
\examples{

# Operators --------------------------------

# `\%eq\%` applies `equivalent()`...

# ...and `\%eq1\%` applies `equivalent_scalar()`:
}
